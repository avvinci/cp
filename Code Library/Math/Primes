vb primes(1E7 + 10, true);
void sieve(int n) {
    primes[0] = false;
    primes[1] = false;
    for (int p = 2; p*p <= n; p++) {
        if (primes[p] == true) {
            for (int i = p * 2; i <= n; i += p)
                primes[i] = false;
        }
    }
}

// O(sqrt(n))
vi divisors(int n) {
    vi v;
    int high = sqrt(n) + 1;
    for(int i = 1; i <= high ; i++) {
        if(n % i == 0) {
            int a = i, b = n/i;
            if(a == b) v.pb(a);
            else {
                v.pb(a);
                v.pb(b);
            }
        }
    }
    return v;
}

// O(sqrt(n)) : Works till n = 1E14 to 1E16 
vi prime_factors(int n) {
    vi primes;
    if(n % 2 == 0)
        primes.pb(2);
    while (n%2 == 0) {
        n = n/2;
    }
    for (int i = 3; i <= sqrt(n); i = i+2) {
    	if(n % i == 0)
    		primes.pb(i);
    	while (n%i == 0) {
            n = n/i;
        }
    }
    if (n > 2)
        primes.pb(n);
    return primes;
}